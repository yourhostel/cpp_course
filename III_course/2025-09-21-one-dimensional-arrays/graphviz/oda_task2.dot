digraph oda_task2_compute_lengths {
rankdir=TB;
node [fontname="DejaVu Sans", shape=box, style="solid,bold"];

start [shape=oval, label="Початок"];
input [shape=parallelogram, label="Введення m, n, A(m×n), L"];
chkPos [shape=diamond, label="(m <= 0 || n <= 0) ?"];
errPos [shape=rectangle, label="err \n \"m і n повинні бути >0\"; \n return nullopt"];
chkDim [shape=diamond, label="(m > 5 || n > 6) ?"];
errDim [shape=rectangle, label="err \n \"Перевищено розмірності \n (m<=5, n<=6)\"; \n return nullopt"];

j0   [shape=rectangle, label="j = 0"];
loopJ[shape=diamond,  label="j < n ?"];
s0i0 [shape=rectangle, label="s = 0; i = 0"];
loopI[shape=diamond,  label="i < m ?"];
add  [shape=rectangle, label="s += (A[i*n + j])^2; i++"];
len  [shape=rectangle, label="L[j] = sqrt(s)"];
jinc [shape=rectangle, label="j++"];
ret  [shape=rectangle, label="return true"];
stop [shape=oval, label="Кінець"];

start -> input -> chkPos;
chkPos -> errPos [label="так"];
errPos -> stop;
chkPos -> chkDim [label="ні"];

chkDim -> errDim [label="так"];
errDim -> stop;
chkDim -> j0    [label="ні"];

j0 -> loopJ;
loopJ -> s0i0 [label="так"];
loopJ -> ret  [label="ні"];

s0i0 -> loopI;
loopI -> add [label="так"];
loopI -> len [label="ні"];
add -> loopI;

len -> jinc -> loopJ;

ret -> stop;
}

