digraph oda_task2 {
    rankdir=TB;
    node [fontname="DejaVu Sans", shape=box, style="solid,bold"];

    start [shape=oval, label="Початок"];
    input [shape=parallelogram, label="Введення m, n, матриці A(m,n)"];
    chk   [shape=diamond, label="m<=5 і n<=6 ?"];
    err   [shape=rectangle, label="Помилка: перевищено розмірності"];
    init  [shape=rectangle, label="maxL=-∞; pos=-1; j=0"];
    loopJ [shape=diamond, label="j < n ?"];
    initS [shape=rectangle, label="s=0; i=0"];
    loopI [shape=diamond, label="i < m ?"];
    add   [shape=rectangle, label="s += A[i][j]^2; i++"];
    len   [shape=rectangle, label="L[j] = sqrt(s)"];
    upd   [shape=diamond, label="L[j] > maxL ?"];
    set   [shape=rectangle, label="maxL=L[j]; pos=j"];
    jinc  [shape=rectangle, label="j++"];
    outL  [shape=parallelogram, label="Вивід масиву L"];
    outM  [shape=parallelogram, label="Вивід maxL та pos"];
    stop  [shape=oval, label="Кінець"];

    start -> input -> chk;
    chk -> err  [label="ні"];
    chk -> init [label="так"];

    init -> loopJ;
    loopJ -> initS [label="так"];
    loopJ -> outL [label="ні"];

    initS -> loopI;
    loopI -> add [label="так"];
    loopI -> len [label="ні"];
    add -> loopI;

    len -> upd;
    upd -> set [label="так"];
    upd -> jinc [label="ні"];
    set -> jinc -> loopJ;

    outL -> outM -> stop;
    err -> stop;
}
